name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  no-std:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: Default Build
        run: ALUVM_FEATURES=default cargo make check
  features:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature: [ std, all, secp256k1, curve25519 ]
    steps:
      - uses: actions/checkout@v2
      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: Build
        run: ALUVM_FEATURES=${{ matrix.feature }} cargo make check
  platforms:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, ubuntu-latest, macos-11.0, windows-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Install macos dependencies
        if: startsWith(matrix.os, 'macos')
        run: brew install pkg-config
      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: Build with all features
        run: cargo make check -e "ALUVM_FEATURES=all"
  toolchains:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [ nightly, beta, stable ]
    steps:
      - uses: actions/checkout@v2
      - name: Install rust ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1
      - name: Build with all features and all targets
        run: cargo make check-all
  dependency:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Create dependency
        run: |
          cargo new dep_test
          cp test/depCargo.toml dep_test/Cargo.toml
          cd dep_test
      - name: Build dependency
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose
      - name: Clean up
        run: |
          cd ..
          rm -rf dep_test
